{"version":3,"sources":["assets/hs.png","assets/mkthn1.jpeg","assets/mkthn2.jpeg","assets/mkthn3.jpeg","assets/scr.jpg","assets/e1.jpg","assets/hi.jpg","assets/ctb.png","components/NavigationBar.js","components/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","NavigationBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","target","FooterPage","color","style","marginTop","md","fluid","Date","getFullYear","hi","Jumbotron","Container","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,moBCQ3C,IAAMC,EAASC,IAAOC,IAAV,KAiBCC,EAAgB,kBACzB,kBAACH,EAAD,KACI,kBAACI,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACnD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,YAAnB,gBACA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,YACf,kBAACD,EAAA,EAAD,KACI,kBAACA,EAAA,EAAIE,KAAL,CAAUP,KAAK,WAAf,QACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,iBAAf,SACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,oBAAf,YACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,6DAA6DQ,OAAO,UAAnF,eAQPC,EAAa,WACtB,OACI,kBAAC,IAAD,CAAWC,MAAM,gBAAgBJ,UAAU,2BAA2BK,MAAO,CAACC,UAAW,QACrF,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,GAAG,KAAKP,UAAU,QACtB,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,mCAAmCN,KAAK,+BACjD,uBAAGM,UAAU,iDAGjB,uBAAGA,UAAU,kCAAkCN,KAAK,8BAChD,uBAAGM,UAAU,mDAGjB,uBAAGA,UAAU,+BAA+BN,KAAK,wCAC7C,uBAAGM,UAAU,sDAGjB,uBAAGA,UAAU,iCAAiCN,KAAK,oCAC/C,uBAAGM,UAAU,wDAOjC,yBAAKA,UAAU,qCACX,kBAAC,IAAD,CAAcQ,OAAK,GAAnB,SACY,IAAIC,MAAOC,cADvB,uC,0fCnEhB,IAAM1B,EAASC,IAAOC,IAAV,IAEcyB,KAoBbC,EAAY,kBACrB,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAOJ,OAAK,EAACR,UAAU,SACnB,yBAAKA,UAAU,YACf,kBAACa,EAAA,EAAD,KACI,gEACA,qG,YCPDC,MAbf,WACE,OAEE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,kBAAC,EAAD,QCRcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ff8a01fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hs.ca95fcfb.png\";","module.exports = __webpack_public_path__ + \"static/media/mkthn1.e511c95d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/mkthn2.9bd2a314.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/mkthn3.911a79d9.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/scr.ae381c03.jpg\";","module.exports = __webpack_public_path__ + \"static/media/e1.06d27b75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hi.85a1d1d2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ctb.a472603a.png\";","import React from 'react';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport { Nav, Navbar } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from 'mdbreact';\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: white;\n    }\n\n    .navbar-brand, .navbar-nav .nav-link {\n        color: white;\n        &:hover {\n            color: grey;\n        }\n    }\n\n    .ftr {\n        margin-top: auto;\n    }\n`;\n\nexport const NavigationBar = () => (\n    <Styles>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/page/#/\">Tianqi Zhang</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\"></Nav>\n                <Nav>\n                    <Nav.Link href=\"/page/#\">Home</Nav.Link>\n                    <Nav.Link href=\"/page/#/about\">About</Nav.Link>\n                    <Nav.Link href=\"/page/#/projects\">Projects</Nav.Link>\n                    <Nav.Link href=\"https://zhangtia.github.io/static/media/MatthewTQZhang.pdf\" target=\"_blank\">Resume</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    </Styles>\n)\n\n\nexport const FooterPage = () => {\n    return (\n        <MDBFooter color=\"elegant-color\" className=\"font-small darken-3 pt-0\" style={{marginTop: '10%'}}>\n            <MDBContainer>\n                <MDBRow>\n                    <MDBCol md=\"12\" className=\"py-5\">\n                        <div className=\"mb-5 flex-center\">\n                            <a className=\"github-ic justify-content-center\" href=\"https://github.com/zhangtia\">\n                                <i className=\"fab fa-github white-text mr-md-5 mr-3 fa-2x\">\n                                </i>\n                            </a>\n                            <a className=\"email-ic justify-content-center\" href=\"mailto: zhangtia@umich.edu\">\n                                <i className=\"far fa-envelope white-text mr-md-5 mr-3 fa-2x\">\n                                </i>\n                            </a>\n                            <a className=\"li-ic justify-content-center\" href=\"https://www.linkedin.com/in/tqzmatt/\">\n                                <i className=\"fab fa-linkedin-in white-text mr-md-5 mr-3 fa-2x\">\n                                </i>\n                            </a>\n                            <a className=\"inst-ic justify-content-center\" href=\"https://www.instagram.com/m4ttq/\">\n                                <i className=\"fab fa-instagram white-text mr-md-5 mr-3 fa-2x\">\n                                </i>\n                            </a>\n                        </div>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n            <div className=\"footer-copyright text-center py-3\">\n                <MDBContainer fluid>\n                    &copy; {new Date().getFullYear()} Made with MDBootstrap and React\n                </MDBContainer>\n            </div>\n        </MDBFooter>\n    );\n}\n\nexport const Footer = () => (\n    <footer style={{ marginTop: \"auto\" }}>\n        <header class=\"page-header\">This is the header</header>\n        <article class=\"page-body\">\n            <p>Main page content here, add more if you want to see the footer push down.</p>\n        </article>\n        <footer class=\"page-footer\">Sticky footer</footer>\n    </footer>\n\n)\n\nexport const Test = () => (\n    <Styles>\n        <Navbar class=\"ftr\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"bottom\">\n\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Container>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"2\"><Nav.Link href=\"https://github.com/zhangtia\">GITHUB</Nav.Link></Col>\n                        <Col xs lg=\"2\"><Nav.Link href=\"mailto: zhangtia@umich.edu\">EMAIL</Nav.Link></Col>\n                        <Col xs lg=\"2\"><Nav.Link href=\"/page/#/contact\">Contact</Nav.Link></Col>\n                    </Row>\n                </Container>\n\n            </Navbar.Collapse>\n        </Navbar>\n    </Styles>\n\n\n)","import React from 'react';\nimport { Jumbotron as Jumbo, Container} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport hi from '../assets/hi.jpg';\n\nconst Styles = styled.div`\n    .jumbo {\n        background: url(${hi}) no-repeat fixed bottom;\n        background-size: cover;\n        color #ccc;\n        height: 200px;\n        position: relative;\n        z-index: -2;\n    }\n\n    .overlay {\n        background-color: #000;\n        opacity: 0.6;\n        position absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        z-index: -1;\n    }\n`;\n\nexport const Jumbotron = () => (\n    <Styles>\n        <Jumbo fluid className=\"jumbo\">\n            <div className=\"overlay\"></div>\n            <Container>\n                <h1>Welcome, Webpage in development!</h1>\n                <p>Last Edit : 29 Dec 2019 01:38:11  --  Finished CTB on Project page</p>\n            </Container>\n        </Jumbo>\n    </Styles>\n)\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home } from './Home';\nimport { About } from './About';\nimport { NoMatch } from './NoMatch';\nimport { Layout } from './components/Layout';\nimport { NavigationBar, FooterPage } from './components/NavigationBar';\nimport { Jumbotron } from './components/Jumbotron';\nimport { Project } from './Projects';\n//import { Footer } from './components/Footer';\n\n\n\nfunction App() {\n  return (\n  \n    <React.Fragment>\n      <NavigationBar />\n      <Jumbotron />\n\n      <FooterPage />\n    </React.Fragment>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}